version: "3"

services:
  web:
    container_name: "web"
    image: nginx:alpine
    depends_on:
      - fastapi
    ports:
      - "8082:80"
    volumes:
      - ./app/conf.d:/etc/nginx/conf.d
    networks:
      - custom

  mongodb:
    container_name: mongodb
    image: mongo:5.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    env_file:
      - .env
    networks:
      - custom

  fastapi:
    build: .
    command: sh -c "python -m uvicorn src.app:app --reload --host 0.0.0.0 --port 8000"
    container_name: fastapi
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
      - kafka
      - redis
    env_file:
      - .env
    volumes:
      - ./src:/app
    networks:
      - custom

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - custom

  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://192.168.99.100:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
#      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - custom

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    env_file:
      - .env
    volumes:
      - redis_data:/data
    networks:
      - custom


networks:
  custom:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: